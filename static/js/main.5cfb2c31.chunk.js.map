{"version":3,"sources":["components/Navabar.js","components/NameCard.js","components/PageNotFound.js","components/CardDetails.js","components/IpoList.js","App.js","serviceWorker.js","index.js"],"names":["Navabar","className","href","withRouter","name","price","date","img","k","history","onClick","push","class","src","PageNotFound","CardDetails","colorArray","id","useParams","useState","labels","datasets","data","dataipo","promoters_holdings","post_issue","backgroundColor","hoverBackgroundColor","promoter","Object","keys","shares_offered_by_category","values","slice","length","category","ipo","style","objectFit","height","image","description","details","issue_type","issue_size","market_lot","min_order_qty","minimum_amount","listing","timetable","open_date","close_date","finalization_date","refund_date","credit_date","listing_date","IpoList","map","v","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5cfb2c31.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navbar.css'\r\n\r\nfunction Navabar() {\r\n    return (\r\n        <div className=\"navbar sticky-top sticky navbar-dark bg-primary  d-flex justify-content-center\">\r\n           <a href=\"/\" className=\"navbar-brand\"><h3> IPO News</h3></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navabar\r\n","import React, { useEffect,useState } from 'react'\r\nimport './NameCard.css'\r\nimport {BrowserRouter, Redirect, withRouter} from 'react-router-dom'\r\nimport dataipo from \"../data.json\"\r\nfunction NameCard({ name,price,date,img,k,history}) {\r\n\r\n    const handleClick=()=>{\r\n        // console.log(name);\r\n           \r\n            history.push(`/${k}`);     \r\n      };\r\n\r\n     \r\n    return (\r\n        <div className=\"shadow-sm card m-3 py-2\" onClick={handleClick}>\r\n            <p className=\"m-0 font-weight-bold py-2 pl-3\">{name}</p>\r\n            <div class=\"px-3 m-0 d-flex flex-row align-items-center justify-content-between\">\r\n                <div className=\"p-0 overflow-hidden d-flex pb-2 flex-column\">\r\n                    <p className=\"p-0 m-0 font-weight-bold namecard__price\">{price}</p>\r\n                    <p className=\"p-0 m-0 text-secondary namecard__date\">{date}</p>\r\n                </div>\r\n                <img className=\"namecard_image\" src={img} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(NameCard);\r\n","import React from 'react'\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div className=\"p-5 text-center\">\r\n            <h1>404  Not Found</h1>\r\n            <a href=\"/\">\r\n                <h3>Go to Main page</h3>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import { Rowing } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react'\r\nimport {Redirect, useParams,BrowserRouter as Router,Route} from \"react-router-dom\"\r\nimport dataipo from \"../data.json\"\r\nimport PageNotFound from './PageNotFound';\r\nimport {Pie, Doughnut} from 'react-chartjs-2';\r\nfunction CardDetails() {\r\n    var colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \r\n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \r\n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\r\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \r\n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\r\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \r\n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\r\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \r\n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\r\n  \r\n    let { id } = useParams();\r\n    const getdata=()=>{\r\n        if(id in dataipo){\r\n            return dataipo[id];\r\n        }else{\r\n            return \"error\"\r\n        }\r\n        \r\n    }\r\n       \r\n    const[promoter,setPromoters]=useState({\r\n        labels: [\r\n            \"Promoters\",\r\n            \"Public\"\r\n        ],\r\n        datasets: [{\r\n            data:[dataipo[id].promoters_holdings.post_issue,\r\n            100-dataipo[id].promoters_holdings.post_issue],\r\n            backgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB'       \r\n            ],\r\n            hoverBackgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB'\r\n            ]\r\n        }]})\r\n        // [\"NII\",\"QIB\"]\r\n        const[category,setCategory]=useState({\r\n            labels: Object.keys(dataipo[id].shares_offered_by_category),\r\n            datasets: [{\r\n                data:Object.values(dataipo[id].shares_offered_by_category)\r\n                ,\r\n                backgroundColor: colorArray.slice(Object.keys(dataipo[id].shares_offered_by_category).length),\r\n                hoverBackgroundColor: colorArray.slice(Object.keys(dataipo[id].shares_offered_by_category).length)\r\n            }]})\r\n\r\n\r\n    const ipo=getdata();\r\n    if(ipo===\"error\"){\r\n        return(<PageNotFound />)\r\n    }\r\n    \r\n    return (\r\n      \r\n            <div className=\"container-md p-4 d-flex justify-content-center flex-column\"> \r\n                <div className=\"d-flex justify-content-between\">\r\n                <h5 className=\"text-center\">{ipo.name}</h5>\r\n                <img style={{objectFit:\"contain\",height:\"40px\"}} src={ipo.image}/>\r\n                </div>\r\n\r\n                <p>{ipo.description}</p>\r\n            <h5 className=\"p-2 mt-2\">IPO Details</h5>\r\n                <table className=\"table table-bordered table-striped\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>IPO Date</th>\r\n                            <td>{ipo.date}</td>\r\n                        </tr>\r\n                         <tr>\r\n                             <th>Issue Type</th>\r\n                            <td>{ipo.details.issue_type}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Issue Size</th>\r\n                            <td>{ipo.details.issue_size}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Market Lot</th>\r\n                            <td>{ipo.details.market_lot}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Min Order Quantity</th>\r\n                            <td>{ipo.details.min_order_qty}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Min Amount</th>\r\n                            <td>{ipo.details.minimum_amount}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Listing At</th>\r\n                            <td>{ipo.details.listing}</td>\r\n                         </tr>\r\n                    </tbody>\r\n                </table>\r\n                <h5 className=\"p-2 mt-2\">IPO Timetable</h5>\r\n                <table className=\"table table-bordered table-striped\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Open date</th>\r\n                            <td>{ipo.timetable.open_date}</td>\r\n                        </tr>\r\n                         <tr>\r\n                             <th>Close Date</th>\r\n                            <td>{ipo.timetable.close_date}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Allotment Date</th>\r\n                            <td>{ipo.timetable.finalization_date}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Refund Date</th>\r\n                            <td>{ipo.timetable.refund_date}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Credit of Share to Demat Date</th>\r\n                            <td>{ipo.timetable.credit_date}</td>\r\n                         </tr>\r\n                         <tr>\r\n                             <th>Listing Date</th>\r\n                            <td>{ipo.timetable.listing_date}</td>\r\n                         </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                <h5 className=\"p-2 mt-2\">Promoters Holdings in after IPO%</h5>\r\n                \r\n                <Pie\r\n                    data={promoter}\r\n                />\r\n                <h5 className=\"p-2 mt-2\"> shares offered by Category in %</h5>\r\n                <Doughnut\r\n                data={category}\r\n                />\r\n                </div>\r\n            </div>\r\n    )\r\n    \r\n    \r\n    \r\n}\r\n\r\nexport default CardDetails\r\n","import React,{useEffect, useState} from 'react'\r\nimport NameCard from './NameCard'\r\nimport dataipo from \"../data.json\"\r\nimport { keys } from '@material-ui/core/styles/createBreakpoints'\r\nfunction IpoList() {\r\n  // const[name,setName]=useState([{\r\n  //   name:\"\",image:\"\",date:\"\",price:\"\",description:\"\",details:{},timetable:{}\r\n  // }]);\r\n  //   useEffect(() => {\r\n      \r\n  //     Object.keys(dataipo).forEach(key=>{\r\n  //       setName(name=>[...name,dataipo[key]])\r\n  //       // console.log(name);\r\n  //     })\r\n  //   },[]);\r\n    return (\r\n        <div>\r\n         {\r\n           Object.keys(dataipo).map((k,v)=>{\r\n             return(\r\n            //  <h1>{dataipo[k].name}\r\n               <NameCard\r\n               name={dataipo[k].name}\r\n               price={dataipo[k].price}\r\n               date={dataipo[k].date}\r\n               img={dataipo[k].image}\r\n               k={k}\r\n               />\r\n             )\r\n           })}\r\n         \r\n         </div>\r\n    )\r\n}\r\n\r\nexport default IpoList\r\n// {\r\n//   name.map(\r\n//    (i)=>(\r\n    \r\n//     <NameCard\r\n//     name={i}\r\n//     price={i.price}\r\n//     date={i.date}\r\n//     img={i.image}\r\n  \r\n//   />  \r\n//    )\r\n//   )\r\n\r\n// }","import React,{useState} from 'react';\nimport './App.css';\nimport Navbar from './components/Navabar'\nimport NameCard from './components/NameCard'\nimport CardDetails from './components/CardDetails'\nimport IpoList from './components/IpoList'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  Redirect\n} from 'react-router-dom'\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport { render } from '@testing-library/react';\nimport PageNotFound from './components/PageNotFound'\n\n\n\nfunction App() {\n\n  \n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n\n      <Navbar />\n      <div className=\"bodycontent\">\n      <Switch>\n     \n        <Route exact path=\"/\" component={IpoList} />\n        <Route exact path=\"/:id\" component={CardDetails} />\n      </Switch>\n      </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n{/* <NameCard\n            name=\"Mazgoan Dock\"\n            price=\"₹135 to ₹145 \"\n            date=\"Sep 29, 2020 - Oct 1, 2020\"\n            img=\"https://lh3.googleusercontent.com/proxy/ByWsT-KeNpKc4UmKZTzUuMF7AsWm5grY5DyBrr-HEmphVzUMQKuV9lIVOSsvRt1IR7eeX7OlNGdyVj6i2x3shn4ee1Z1YKwDmQJ9arOT7xxRO-f4H8IDOimeyOVhIcq7FEX_nszZyiLtWXxi5F9h6Hh5ObGlmJ3VSY_4Fv4WBwlYdT3p0sFkpnOpMce6ZDLV0SAzYuc=w377-h390\"\n          />\n          <NameCard\n            name=\"Mazgoan Dock\"\n            price=\"₹135 to ₹145 \"\n            date=\"Sep 29, 2020 - Oct 1, 2020\"\n            img=\"https://lh3.googleusercontent.com/proxy/ByWsT-KeNpKc4UmKZTzUuMF7AsWm5grY5DyBrr-HEmphVzUMQKuV9lIVOSsvRt1IR7eeX7OlNGdyVj6i2x3shn4ee1Z1YKwDmQJ9arOT7xxRO-f4H8IDOimeyOVhIcq7FEX_nszZyiLtWXxi5F9h6Hh5ObGlmJ3VSY_4Fv4WBwlYdT3p0sFkpnOpMce6ZDLV0SAzYuc=w377-h390\"\n          /> */}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}